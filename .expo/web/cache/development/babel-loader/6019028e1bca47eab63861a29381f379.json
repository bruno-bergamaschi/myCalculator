{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\GitHub\\\\myCalculator\\\\src\\\\components\\\\Calculadora\\\\Calculadora.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport style from \"./styleCalculadora\";\nexport default function Calculadora() {\n  var _useState = useState({\n    valor: 0\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      resultado = _useState2[0],\n      setResultado = _useState2[1];\n\n  var _useState3 = useState({\n    valorA: 0,\n    valorB: 0\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      input = _useState4[0],\n      setInput = _useState4[1];\n\n  var operacao = function operacao(operador) {\n    if (input.valorA != 0 || input.valorB != 0) {\n      switch (operador) {\n        case '+':\n          setResultado(_objectSpread(_objectSpread({}, resultado), {}, {\n            valor: input.valorA + input.valorB\n          }));\n          break;\n\n        case '-':\n          setResultado(_objectSpread(_objectSpread({}, resultado), {}, {\n            valor: input.valorA - input.valorB\n          }));\n          break;\n\n        case '*':\n          setResultado(_objectSpread(_objectSpread({}, resultado), {}, {\n            valor: input.valorA * input.valorB\n          }));\n          break;\n\n        case '/':\n          setResultado(_objectSpread(_objectSpread({}, resultado), {}, {\n            valor: input.valorA / input.valorB\n          }));\n          break;\n\n        case '%':\n          setResultado(_objectSpread(_objectSpread({}, resultado), {}, {\n            valor: input.valorA % input.valorB\n          }));\n          break;\n\n        case 'a2':\n          setResultado(_objectSpread(_objectSpread({}, resultado), {}, {\n            valor: Math.pow(input.valorA, 2)\n          }));\n          break;\n\n        case 'b2':\n          setResultado(_objectSpread(_objectSpread({}, resultado), {}, {\n            valor: Math.pow(input.valorB, 2)\n          }));\n          break;\n\n        case 'aB':\n          setResultado(_objectSpread(_objectSpread({}, resultado), {}, {\n            valor: Math.pow(input.valorA, input.valorB)\n          }));\n          break;\n\n        case 'clear':\n          setResultado(_objectSpread(_objectSpread({}, resultado), {}, {\n            valor: 0\n          }));\n          break;\n\n        default:\n          setResultado(_objectSpread(_objectSpread({}, resultado), {}, {\n            valor: 'Valores incorretos'\n          }));\n      }\n    } else {\n      setResultado(_objectSpread(_objectSpread({}, resultado), {}, {\n        valor: 'Informe os valores A e B'\n      }));\n    }\n  };\n\n  var clearResult = function clearResult() {\n    setResultado(_objectSpread(_objectSpread({}, resultado), {}, {\n      valor: 0\n    }));\n  };\n\n  var handleInputChange = function handleInputChange(parametro, value) {\n    setInput(_objectSpread(_objectSpread({}, input), {}, _defineProperty({}, parametro, value)));\n  };\n\n  return React.createElement(View, {\n    style: style.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: style.viewResultado,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: style.textResultado,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, resultado.valor)), React.createElement(View, {\n    style: style.viewCalculadora,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: [style.button, style.buttonAmarelo],\n    onPress: function onPress() {\n      return operacao('+');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: style.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 21\n    }\n  }, \"+\")), React.createElement(TouchableOpacity, {\n    style: [style.button, style.buttonAmarelo],\n    onPress: function onPress() {\n      return operacao('-');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: style.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 21\n    }\n  }, \"-\")), React.createElement(TouchableOpacity, {\n    style: [style.button, style.buttonAmarelo],\n    onPress: function onPress() {\n      return operacao('*');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: style.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 21\n    }\n  }, \"x\")), React.createElement(TouchableOpacity, {\n    style: [style.button, style.buttonAmarelo],\n    onPress: function onPress() {\n      return operacao('/');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: style.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 21\n    }\n  }, \"/\")), React.createElement(TouchableOpacity, {\n    style: [style.button, style.buttonCinza],\n    onPress: function onPress() {\n      return operacao('%');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: style.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 21\n    }\n  }, \"%\")), React.createElement(TouchableOpacity, {\n    style: [style.button, style.buttonCinza],\n    onPress: function onPress() {\n      return operacao('a2');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: style.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 21\n    }\n  }, \"a\\xB2\")), React.createElement(TouchableOpacity, {\n    style: [style.button, style.buttonCinza],\n    onPress: function onPress() {\n      return operacao('b2');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: style.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 21\n    }\n  }, \"b\\xB2\")), React.createElement(TouchableOpacity, {\n    style: [style.button, style.buttonCinza],\n    onPress: function onPress() {\n      return operacao('aB');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: style.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 21\n    }\n  }, \"aB\")), React.createElement(TouchableOpacity, {\n    style: [style.button, style.buttonCinza, style.buttonClear],\n    onPress: clearResult,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: style.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 21\n    }\n  }, \"Clear\"))), React.createElement(View, {\n    style: style.viewInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"Valor A\",\n    keyboardType: \"numeric\",\n    style: style.inputText,\n    onChangeText: function onChangeText(valor) {\n      return handleInputChange('valorA', Number(valor));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"Valor B\",\n    keyboardType: \"numeric\",\n    style: style.inputText,\n    onChangeText: function onChangeText(valor) {\n      return handleInputChange('valorB', Number(valor));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 17\n    }\n  })));\n}","map":{"version":3,"sources":["D:/GitHub/myCalculator/src/components/Calculadora/Calculadora.jsx"],"names":["React","useState","style","Calculadora","valor","resultado","setResultado","valorA","valorB","input","setInput","operacao","operador","Math","pow","clearResult","handleInputChange","parametro","value","container","viewResultado","textResultado","viewCalculadora","button","buttonAmarelo","text","buttonCinza","buttonClear","viewInput","inputText","Number"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Text, TextInput, TouchableOpacity, View } from 'react-native';\r\nimport style from './styleCalculadora';\r\n\r\nexport default function Calculadora() {\r\n    const [resultado, setResultado] = useState({\r\n        valor: 0\r\n    })\r\n\r\n    const [input, setInput] = useState({\r\n        valorA: 0,\r\n        valorB: 0\r\n    })\r\n\r\n    const operacao = (operador) => {\r\n        if (input.valorA != 0 || input.valorB != 0) {\r\n            switch (operador) {\r\n                case '+':\r\n                    setResultado({\r\n                        ...resultado, valor: input.valorA + input.valorB\r\n                    });\r\n                    break;\r\n\r\n                case '-':\r\n                    setResultado({\r\n                        ...resultado, valor: input.valorA - input.valorB\r\n                    });\r\n                    break;\r\n\r\n                case '*':\r\n                    setResultado({\r\n                        ...resultado, valor: input.valorA * input.valorB\r\n                    });\r\n                    break;\r\n\r\n                case '/':\r\n                    setResultado({\r\n                        ...resultado, valor: input.valorA / input.valorB\r\n                    });\r\n                    break;\r\n\r\n                case '%':\r\n                    setResultado({\r\n                        ...resultado, valor: input.valorA % input.valorB\r\n                    });\r\n                    break;\r\n\r\n                case 'a2':\r\n                    setResultado({\r\n                        ...resultado, valor: Math.pow(input.valorA, 2)\r\n                    });\r\n                    break;\r\n\r\n                case 'b2':\r\n                    setResultado({\r\n                        ...resultado, valor: Math.pow(input.valorB, 2)\r\n                    });\r\n                    break;\r\n\r\n                case 'aB':\r\n                    setResultado({\r\n                        ...resultado, valor: Math.pow(input.valorA, input.valorB)\r\n                    });\r\n                    break;\r\n\r\n                case 'clear':\r\n                    setResultado({\r\n                        ...resultado, valor: 0\r\n                    });\r\n                    break;\r\n\r\n                default:\r\n                    setResultado({\r\n                        ...resultado, valor: 'Valores incorretos'\r\n                    });\r\n            }\r\n        } else {\r\n            setResultado({\r\n                ...resultado, valor: 'Informe os valores A e B'\r\n            })\r\n        }\r\n    }\r\n\r\n    const clearResult = () => {\r\n        setResultado({\r\n            ...resultado, valor: 0,\r\n        })\r\n    }\r\n\r\n    const handleInputChange = (parametro, value) => {\r\n        setInput({\r\n            ...input, [parametro]: value\r\n        })\r\n    }\r\n\r\n    return (\r\n        <View style={style.container}>\r\n\r\n            <View style={style.viewResultado}>\r\n                <Text style={style.textResultado}>{resultado.valor}</Text>\r\n            </View>\r\n\r\n            <View style={style.viewCalculadora}>\r\n\r\n                <TouchableOpacity\r\n                    style={[style.button, style.buttonAmarelo]}\r\n                    onPress={\r\n                        ()=> operacao('+')\r\n                    }\r\n                >\r\n                    <Text style={style.text}>+</Text>\r\n                </TouchableOpacity>\r\n\r\n                <TouchableOpacity\r\n                    style={[style.button, style.buttonAmarelo]}\r\n                    onPress={\r\n                        ()=> operacao('-')\r\n                    }\r\n                >\r\n                    <Text style={style.text}>-</Text>\r\n                </TouchableOpacity>\r\n\r\n                <TouchableOpacity\r\n                    style={[style.button, style.buttonAmarelo]}\r\n                    onPress={\r\n                        ()=> operacao('*')\r\n                    }\r\n                >\r\n                    <Text style={style.text}>x</Text>\r\n                </TouchableOpacity>\r\n\r\n                <TouchableOpacity\r\n                    style={[style.button, style.buttonAmarelo]}\r\n                    onPress={\r\n                        ()=> operacao('/')\r\n                    }\r\n                >\r\n                    <Text style={style.text}>/</Text>\r\n                </TouchableOpacity>\r\n\r\n                <TouchableOpacity\r\n                    style={[style.button, style.buttonCinza]}\r\n                    onPress={\r\n                        ()=> operacao('%')\r\n                    }\r\n                >\r\n                    <Text style={style.text}>%</Text>\r\n                </TouchableOpacity>\r\n\r\n                <TouchableOpacity\r\n                    style={[style.button, style.buttonCinza]}\r\n                    onPress={\r\n                        ()=> operacao('a2')\r\n                    }\r\n                >\r\n                    <Text style={style.text}>a²</Text>\r\n                </TouchableOpacity>\r\n\r\n                <TouchableOpacity\r\n                    style={[style.button, style.buttonCinza]}\r\n                    onPress={\r\n                        ()=> operacao('b2')\r\n                    }\r\n                >\r\n                    <Text style={style.text}>b²</Text>\r\n                </TouchableOpacity>\r\n\r\n                <TouchableOpacity\r\n                    style={[style.button, style.buttonCinza]}\r\n                    onPress={\r\n                        ()=> operacao('aB')\r\n                    }\r\n                >\r\n                    <Text style={style.text}>aB</Text>\r\n                </TouchableOpacity>\r\n\r\n                <TouchableOpacity\r\n                    style={[style.button, style.buttonCinza, style.buttonClear]}\r\n                    onPress={\r\n                        clearResult\r\n                    }\r\n                >\r\n                    <Text style={style.text}>Clear</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n\r\n            <View style={style.viewInput}>\r\n                <TextInput\r\n                    placeholder='Valor A'\r\n                    keyboardType='numeric'\r\n                    style={style.inputText}\r\n                    onChangeText={\r\n                        (valor) => handleInputChange('valorA', Number(valor))\r\n                    }\r\n                />\r\n                <TextInput\r\n                    placeholder='Valor B'\r\n                    keyboardType='numeric'\r\n                    style={style.inputText}\r\n                    onChangeText={\r\n                        (valor) => handleInputChange('valorB', Number(valor))\r\n                    }\r\n                />\r\n            </View>\r\n\r\n        </View>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}